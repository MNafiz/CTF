

# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_3 = Integer(3); _sage_const_1719620105458406433483340568317543019584575635895742560438771105058321655238562613083979651479555788009994557822024565226932906295208262756822275663694111 = Integer(1719620105458406433483340568317543019584575635895742560438771105058321655238562613083979651479555788009994557822024565226932906295208262756822275663694111); _sage_const_2 = Integer(2); _sage_const_4270 = Integer(4270)
from sage.all import *
from sympy import factorint
import libnum

def babyGiant(g, h, p, brute):
    x = []
    for i in range(_sage_const_1 , brute+_sage_const_1 ):
        if g**i == h:
            x.append(i)
            print("ada")
    return min(x)

def PohligHellman(g, h, p):
    rem = []
    modulus = []
    faktors = [i for i in factorint(int(p - _sage_const_1 ))]
    print(faktors)
    phi = math.prod(faktors)
    for faktor in [_sage_const_3 ]:
        multiplier = phi // faktor
        _g = g**multiplier #pow(g, multiplier, p)
        _h = h**multiplier #pow(h, multiplier, p)
        modulus.append(faktor)
        rem.append(babyGiant(_g, _h, p, faktor))
    return libnum.solve_crt(rem, modulus)

p = _sage_const_1719620105458406433483340568317543019584575635895742560438771105058321655238562613083979651479555788009994557822024565226932906295208262756822275663694111 
Fp = GF(p)
g = Fp(_sage_const_2 )
x = Fp(_sage_const_4270 )
h = g**x

print(PohligHellman(g, h, p))

