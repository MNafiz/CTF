import math

def roror(m):
    for i in range(m, 1234567891011121314151617):
        m^=i
    return m

def computeXOR(n):
    if (n % 4) == 0:
        return n
    elif (n % 4) == 1:
        return 1
    elif (n % 4) == 2:
        return n + 1
    return 0

def roror2(m, x=1234567891011121314151617):
    cxor = computeXOR(x-1)
    for i in range(m+1):
        cxor ^= i
    return cxor

n = 16514816009011879549
kemungkinan_key = []
for i in range(1,10):
    kemungkinan_key.append((roror2(i)*i)%n)

cip = [16514816009011879549, 8460772314775398290, 11281029753033864562, 406728620538917158, 6047243497055849560, 8460772314775398287, 5640514876516932266, 8867500935314315566, 2820257438258466097, 8460772314775398298, 6047243497055849563, 406728620538917154, 6047243497055849556, 11281029753033864530, 3226986058797383403, 3226986058797383406, 14101287191292330527, 406728620538917180, 2820257438258466098, 8460772314775398324, 8460772314775398313, 2820257438258466104, 3226986058797383405, 14101287191292330496, 3226986058797383389, 406728620538917125, 8867500935314315644, 11281029753033864514, 14101287191292330525, 11281029753033864518, 5640514876516932337, 406728620538917143, 14101287191292330502, 8867500935314315625, 5640514876516932295, 5640514876516932341, 5640514876516932333, 6047243497055849524, 11281029753033864459, 6047243497055849556, 8460772314775398378, 3226986058797383392, 6047243497055849578, 6047243497055849523, 2820257438258466169, 14101287191292330512, 8867500935314315561, 5640514876516932325]

flag = ""
for i in cip[1:]:
    for key in kemungkinan_key:
        hasil = i ^ key
        if 0x20 <= hasil <= 125:
            flag += chr(hasil)
            break

print(flag)